package  {	import flash.display.MovieClip;	import flash.events.Event;	import flash.events.KeyboardEvent;		public class carro extends MovieClip {		private var teclaDireita:Boolean = false;		private var teclaEsquerda:Boolean = false;		private var teclaCima:Boolean = false;		private var teclaBaixo:Boolean = false;		private var colidiraAEsquerda:Boolean = false;		private var colidiraADireita:Boolean = false;		private var colidiraACima:Boolean = false;		private var colidiraABaixo:Boolean = false;		private var margem_esq:Number = 0;		private var margem_dir:Number = 0;		private var margem_sup:Number = 0;		private var margem_inf:Number = 0;		private var distX:Number = 5;		private var distY:Number = 5;		private var proximoX:Number;		private var proximoY:Number;		private var gravidade:Number = 2;				public function carro() {			this.x = 50;			this.y = 50;		}				public function controles(){			stage.addEventListener(KeyboardEvent.KEY_DOWN, pressionar);			stage.addEventListener(KeyboardEvent.KEY_UP, soltar);			stage.addEventListener(Event.ENTER_FRAME, testa_tecla);		}				private function pressionar(event:KeyboardEvent){			if(event.keyCode == 37){				teclaEsquerda = true;			}						if(event.keyCode == 39){				teclaDireita = true;			}						if(event.keyCode == 38){				teclaCima = true;			}						if(event.keyCode == 40){				teclaBaixo = true;			}		}				private function soltar(event:KeyboardEvent){			if(event.keyCode == 37){				teclaEsquerda = false;			}						if(event.keyCode == 39){				teclaDireita = false;			}						if(event.keyCode == 38){				teclaCima = false;			}						if(event.keyCode == 40){				teclaBaixo = false;			}		}				private function testa_tecla(evt:Event){						colidiraADireita = false;			colidiraAEsquerda = false;			colidiraACima = false;			colidiraABaixo = false;			//PERCORRE TODO O VETOR BARREIRAS TESTANDO COLISÕES E ATUALIZANDO A POSIÇÃO DO PERSONAGEM			for (var i:Number=0; i<MovieClip(parent).barreiras.length; i++){				//INCLUI O TAMANHO DO PERSONAGEM NO CÁLCULO DA MARGEM				margem_dir=MovieClip(parent).barreiras[i].margem_dir + this.width/2;				margem_esq=MovieClip(parent).barreiras[i].margem_esq - this.width/2;				margem_sup=MovieClip(parent).barreiras[i].margem_sup - this.height/2;				margem_inf=MovieClip(parent).barreiras[i].margem_inf + this.height/2;				//TESTA COLISÃO A DIREITA E ESQUERDA				if (this.y >= margem_sup && this.y <= margem_inf){					if(teclaDireita && this.x + distX >= margem_esq && this.x-1 < margem_esq){						colidiraAEsquerda = true;						proximoX = margem_esq;					}					if(teclaEsquerda && this.x - distX <= margem_dir && this.x+1 > margem_dir) {						colidiraADireita = true;						proximoX = margem_dir;					}					}				//TESTA COLISÃO ACIMA E ABAIXO				if (this.x >= margem_esq && this.x <= margem_dir){					if(teclaCima && this.y - distY <= margem_inf && this.y +1 > margem_inf) {						colidiraABaixo = true;						proximoY = margem_inf;					}					//>> sai teclaBaixo da condição a seguir										if(this.y + distY >= margem_sup && this.y -1 < margem_sup) {						colidiraACima = true;						trace("colidiu")						proximoY = margem_sup;						}				}			}			//DESLOCAMENTO QUANDO NÃO OCORRE COLISÃO E PERSONAGEM ESTA DENTRO DA TELA			if(teclaEsquerda && this.x >= this.width/2 && !colidiraADireita){				proximoX = this.x - distX;				};			if(teclaDireita && this.x <= stage.stageWidth-this.width/2 && !colidiraAEsquerda){				proximoX = this.x + distX;				}			if(teclaCima && this.y >= this.height/2 && !colidiraABaixo){//>> Novo valor para DistY				distY = -8//>> Soma distY que agora é negativo (OBS.: a gravidade fará com que chegue a 0 e fique positivo)				proximoY = this.y + distY				}				//Não testa mais terclaBaixo			/*if(teclaBaixo && this.y <= stage.stageHeight-this.height/2 && !colidiraACima){				proximoY = this.y + distY;				}*/				//Entra a gravidade quando não há colisão com a parte superior das barreiras 							if (!colidiraACima)			{				proximoY = this.y + distY				distY += gravidade			}							//ATUALIZA O VALOR DO PERSONAGEM			this.x = proximoX			this.y = proximoY		}	}}